{"$message_type":"diagnostic","message":"returning the result of a `let` binding from a block","code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","spans":[{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":884,"byte_end":960,"line_start":30,"line_end":30,"column_start":5,"column_end":81,"is_primary":false,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();","highlight_start":5,"highlight_end":81}],"label":"unnecessary `let` binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":965,"byte_end":981,"line_start":31,"line_end":31,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    division_results","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::let_and_return)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"return the expression directly","code":null,"level":"help","spans":[{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":884,"byte_end":960,"line_start":30,"line_end":30,"column_start":5,"column_end":81,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();","highlight_start":5,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":965,"byte_end":981,"line_start":31,"line_end":31,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    division_results","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"numbers.into_iter().map(|n| divide(n, 27)).collect()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: returning the result of a `let` binding from a block\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mexercises/18_iterators/iterators3.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munnecessary `let` binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    division_results\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::let_and_return)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: return the expression directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mnumbers.into_iter().map(|n| divide(n, 27)).collect()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"returning the result of a `let` binding from a block","code":{"code":"clippy::let_and_return","explanation":null},"level":"warning","spans":[{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":1210,"byte_end":1286,"line_start":38,"line_end":38,"column_start":5,"column_end":81,"is_primary":false,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();","highlight_start":5,"highlight_end":81}],"label":"unnecessary `let` binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":1291,"byte_end":1307,"line_start":39,"line_end":39,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    division_results","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"return the expression directly","code":null,"level":"help","spans":[{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":1210,"byte_end":1286,"line_start":38,"line_end":38,"column_start":5,"column_end":81,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();","highlight_start":5,"highlight_end":81}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises/18_iterators/iterators3.rs","byte_start":1291,"byte_end":1307,"line_start":39,"line_end":39,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    division_results","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"numbers.into_iter().map(|n| divide(n, 27)).collect()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: returning the result of a `let` binding from a block\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mexercises/18_iterators/iterators3.rs:39:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27)).collect();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munnecessary `let` binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    division_results\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: return the expression directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mnumbers.into_iter().map(|n| divide(n, 27)).collect()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
